//题目来源：acwing
#include <bits/stdc++.h>

using namespace std;

const int N = 1010;
int f[N],a[N];

int main()
{
    int n;cin>>n;
    for(int i = 1;i <= n;i++){
        cin>>a[i];
    }
    for(int i = 1;i <= n;i++){
        f[i] = 1;
        for(int j = 1;j < i;j++){
            if(a[j] < a[i]){
                f[i] = max(f[i],f[j]+1);
            }
        }
    }
    int res = 0;
    for(int i = 1;i <= n;i++){
        res = max(res,f[i]);
    }
    cout<<res<<endl;
    return 0;
}
一下是用二分优化后的方法,适用于1e5这种量级
#include <bits/stdc++.h>

using namespace std;

const int N = 100010;

int n;
int f[N];
vector<int> ans;

int find(vector<int> &ch,int target)
{
    int l = 0;
    int r = ch.size()-1;
    int mid;
    while(l < r)
    {
        mid = (l+r)/2;
        if(ch[mid] >= target){
            r = mid;
        }
        else{
            l = mid+1;
        }
    }
    return r;
}

int main()
{
    cin >> n;
    for(int i = 1;i <= n;i++)
    {
        cin>>f[i];
    }
    ans.push_back(-2e9);
    for(int i = 1;i <= n;i++)
    {
        if(f[i] > ans.back()){
            ans.push_back(f[i]);
        }
        else
        {
            ans[find(ans,f[i])] = f[i];
        }
    }
    cout<<ans.size()-1;

    return 0;
}
