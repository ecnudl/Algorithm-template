//建堆
#include <bits/stdc++.h>

using namespace std;

int n,m,mysize;
const int N = 100010;
int h[N];

void down(int u)
{
    int t = u;
    if(u*2 <= mysize && h[t] > h[u*2]) t = u*2;
    if(u * 2 + 1 <= mysize && h[t] > h[u*2+1]) t = u*2 + 1;
    if(u != t)
    {
        swap(h[u],h[t]);
        down(t);
    }
}

int main()
{
    cin >> n >> m;
    for(int i = 1;i <= n;i++) cin >> h[i];
    mysize = n;
    
    for(int i = n/2;i;i--) down(i);
    
    while(m--)
    {
        cout << h[1] << ' ';
        h[1] = h[mysize--];
        down(1);
    }
    
    return 0;
}
//相关堆操作
#include <bits/stdc++.h>

using namespace std;
const int N = 100010;

int h[N],hp[N],ph[N],mysize;

void heap_swap(int a,int b)
{
    swap(hp[a],hp[b]);
    swap(ph[hp[a]],ph[hp[b]]);
    swap(h[a],h[b]);
}

void down(int u)
{
    int t = u;
    if(2*u <= mysize && h[2*u] < h[t]) t = 2*u;
    if(2*u+1 <= mysize && h[2*u+1] < h[t]) t = 2*u+1;
    if(u != t)
    {
        heap_swap(t,u);
        down(t);
    }
}

void up(int u)
{
    while(u/2 > 0 && h[u] < h[u/2])
    {
        heap_swap(u,u/2);
        u >>= 1;
    }
}

int main()
{
    ios::sync_with_stdio(false);
    cin.tie(0);cout.tie(0);
    int n,m = 0;
    cin >> n;
    for(int i = 0;i < n;i++)
    {
        string s;
        cin >> s;
        if(s == "I")
        {
            int k;
            cin >> k;
            h[++mysize] = k;
            m++;
            hp[mysize] = m;
            ph[m] = mysize;
            up(mysize);
        }
        else if(s == "PM") cout << h[1] << endl;
        else if(s == "DM")
        {
            heap_swap(1,mysize);
            mysize--;
            down(1);
        }
        else if(s == "D")
        {
            int k;cin >> k;
            k = ph[k];
            heap_swap(k,mysize);
            mysize--;
            down(k),up(k);
        }
        else
        {
            int k,x;
            cin >> k >> x;
            k = ph[k];
            h[k] = x;
            down(k),up(k);
        }
    }
    
    return 0;
}
