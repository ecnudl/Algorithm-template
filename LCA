int dist[N],dep[N],n,m,rt;
VI e[N];
int fa[N][M];
void dfs(int x,int fan)
{
    fa[x][0] = fan;
    dep[x] = dep[fan] + 1;
    for(int i = 1;i < M;i++) fa[x][i] = fa[fa[x][i - 1]][i - 1];
    for(auto y : e[x])
    {
        if(y == fan) continue;
        dist[y] = dist[x] + 1;
        dfs(y,x);
    }
}
int LCA(int x, int y)
{
    int a = dep[x],b = dep[y];
    if(a > b) swap(x, y);
    int tmp = dep[y] - dep[x];
    for(int i = 0;i < M;i++) {
        if(Bit(i) & tmp) y = fa[y][i];
    }
    if(y == x) return x;
    for(int i = M - 1;i >= 0;i--)
    {
        if(fa[x][i] != fa[y][i]) {
            x = fa[x][i];
            y = fa[y][i];
        }
    }
    return fa[x][0];
}
void solve() {
    cin >> n >> m >> rt;
    for(int i = 1;i < n;i++)
    {
        int a,b;cin >> a >> b;
        e[a].pb(b);
        e[b].pb(a);
    }
    dfs(rt,0);
    while(m --)
    {
        int a,b;cin >> a >> b;
        int c = LCA(a,b);
        cout << c << endl;
    }
}
