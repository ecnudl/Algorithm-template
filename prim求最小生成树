#include <bits/stdc++.h>

using namespace std;
const int N = 510,INF = 0x3f3f3f3f;

int n,m;
bool st[N];
int g[N][N];
int dist[N],pre[N];

int prim()
{
    memset(dist,0x3f,sizeof dist);
    int res = 0;
    for(int i = 0;i < n;i++)
    {
        int t = -1;
        for(int j = 1;j <= n;j++)
        {
            if(!st[j] && (t == -1 || dist[j] < dist[t]))
                t = j;
        }
        
        if(i && dist[t] == INF) return INF;
        
        if(i) res += dist[t];
        st[t] = true;
        
        for(int j = 1;j <= n;j++)
        {
            if(dist[j] > g[t][j] && !st[j])
            {
                dist[j] = g[t][j];
                pre[j] = t;
            }
        }
    }
    return res;
}

int main()
{
    cin >> n >> m;
    memset(g,0x3f,sizeof g);
    while(m --)
    {
        int a,b,w;
        cin >> a >> b >> w;
        g[a][b] = g[b][a] = min(g[a][b],w);
    }
    int t = prim();
    if(t == INF) puts("impossible");
    else cout << t;
    
    return 0;
}
